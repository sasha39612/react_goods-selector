{"version":3,"sources":["App.js","index.js"],"names":["preparedGoods","map","item","index","id","name","App","state","selectedGoods","toggleGood","setState","includes","goodIndex","indexOf","splice","clearSelect","this","temp","length","className","join","type","onClick","good","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAgBMA,G,MAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoCC,KAAI,SAACC,EAAMC,GAAP,MACxC,CACEC,GAAID,EACJE,KAAMH,OAgFKI,E,4MA3EbC,MAAQ,CACNC,cAAe,I,EAGnBC,WAAa,YAAe,IAAZJ,EAAW,EAAXA,KACd,EAAKK,UAAS,SAACH,GACb,IAAKA,EAAMC,cAAcG,SAASN,GAChC,MAAO,CACLG,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BH,KAI5C,IAAMO,EAAYL,EAAMC,cAAcK,QAAQR,GAI9C,OAFAE,EAAMC,cAAcM,OAAOF,EAAW,GAE/B,CACLJ,cAAeD,EAAMC,mB,EAK1BO,YAAc,WACZ,EAAKL,SAAS,CACZF,cAAe,M,uDAIT,IAAD,OACCA,EAAkBQ,KAAKT,MAAvBC,cAEFS,EAAST,EAAcU,OAAS,EAAK,EAAI,EAE/C,OACE,yBAAKC,UAAU,mBACb,wBAAIA,UAAU,iBACTF,EAAF,2BAEuBT,EAAcY,KAAK,OAF1C,yBAKFH,GACC,4BACEE,UAAU,gBACVE,KAAK,SACLC,QAASN,KAAKD,aAHhB,SASF,6BACE,4BACGf,EAAcC,KAAI,SAAAsB,GAAI,OACrB,wBACEC,IAAKD,EAAKnB,GACVe,UAAWX,EAAcG,SAASY,EAAKlB,MACnC,WAAa,oBAEhBkB,EAAKlB,KACN,4BACEgB,KAAK,SACLC,QAAS,kBAAM,EAAKb,WAAWc,KAFjC,2B,GA7DGE,IAAMC,WCnBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d467fa0a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map((item, index) => (\n  {\n    id: index,\n    name: item,\n  }\n));\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n  }\n\ntoggleGood = ({ name }) => {\n  this.setState((state) => {\n    if (!state.selectedGoods.includes(name)) {\n      return {\n        selectedGoods: [...state.selectedGoods, name],\n      };\n    }\n\n    const goodIndex = state.selectedGoods.indexOf(name);\n\n    state.selectedGoods.splice(goodIndex, 1);\n\n    return {\n      selectedGoods: state.selectedGoods,\n    };\n  });\n}\n\n clearSelect = () => {\n   this.setState({\n     selectedGoods: [],\n   });\n }\n\n render() {\n   const { selectedGoods } = this.state;\n\n   const temp = ((selectedGoods.length > 0) ? 1 : 0);\n\n   return (\n     <div className=\"goods__selector\">\n       <h1 className=\"goods__select\">\n         {(!temp)\n           ? `Selected good: - none`\n           : `Selected good: - ${selectedGoods.join(', ')}`\n         }\n       </h1>\n       {temp && (\n         <button\n           className=\"button__clear\"\n           type=\"button\"\n           onClick={this.clearSelect}\n         >\n           Clear\n         </button>\n       )}\n\n       <div>\n         <ul>\n           {preparedGoods.map(good => (\n             <li\n               key={good.id}\n               className={selectedGoods.includes(good.name)\n                 ? 'selected' : 'selected_not_yet'}\n             >\n               {good.name}\n               <button\n                 type=\"button\"\n                 onClick={() => this.toggleGood(good)}\n               >\n                 add / remove\n               </button>\n             </li>\n           ))}\n         </ul>\n       </div>\n     </div>\n   );\n }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}